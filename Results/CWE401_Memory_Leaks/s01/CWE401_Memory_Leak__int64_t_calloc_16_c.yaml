---
MainSourceFile:  '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
Diagnostics:
  - DiagnosticName:  llvmlibc-restrict-system-libc-headers
    DiagnosticMessage:
      Message:         system include wchar.h not allowed
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      502
      Replacements:
        - FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
          Offset:          502
          Length:          20
          ReplacementText: ''
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-init-variables
    DiagnosticMessage:
      Message:         'variable ''data'' is not initialized'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      610
      Replacements:
        - FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
          Offset:          614
          Length:          0
          ReplacementText: ' = NULL'
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  altera-unroll-loops
    DiagnosticMessage:
      Message:         'kernel performance could be improved by unrolling this loop with a ''#pragma unroll'' directive'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      639
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-avoid-magic-numbers
    DiagnosticMessage:
      Message:         '100 is a magic number; consider replacing it with a named constant'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      748
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  concurrency-mt-unsafe
    DiagnosticMessage:
      Message:         function is not thread safe
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      799
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-avoid-magic-numbers
    DiagnosticMessage:
      Message:         '5LL is a magic number; consider replacing it with a named constant'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      875
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  altera-unroll-loops
    DiagnosticMessage:
      Message:         'kernel performance could be improved by unrolling this loop with a ''#pragma unroll'' directive'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      945
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-init-variables
    DiagnosticMessage:
      Message:         'variable ''data'' is not initialized'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1282
      Replacements:
        - FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
          Offset:          1286
          Length:          0
          ReplacementText: ' = NULL'
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  altera-unroll-loops
    DiagnosticMessage:
      Message:         'kernel performance could be improved by unrolling this loop with a ''#pragma unroll'' directive'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1311
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-avoid-magic-numbers
    DiagnosticMessage:
      Message:         '100 is a magic number; consider replacing it with a named constant'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1420
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  concurrency-mt-unsafe
    DiagnosticMessage:
      Message:         function is not thread safe
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1471
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-avoid-magic-numbers
    DiagnosticMessage:
      Message:         '5LL is a magic number; consider replacing it with a named constant'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1547
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  altera-unroll-loops
    DiagnosticMessage:
      Message:         'kernel performance could be improved by unrolling this loop with a ''#pragma unroll'' directive'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1617
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-init-variables
    DiagnosticMessage:
      Message:         'variable ''data'' is not initialized'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1860
      Replacements:
        - FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
          Offset:          1864
          Length:          0
          ReplacementText: ' = NULL'
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  altera-unroll-loops
    DiagnosticMessage:
      Message:         'kernel performance could be improved by unrolling this loop with a ''#pragma unroll'' directive'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1889
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  clang-diagnostic-int-to-pointer-cast
    DiagnosticMessage:
      Message:         'cast to ''int64_t *'' (aka ''long *'') from smaller integer type ''int'''
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1987
      Replacements:    []
      Ranges:
        - FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
          FileOffset:      1987
          Length:          38
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  performance-no-int-to-ptr
    DiagnosticMessage:
      Message:         integer to pointer cast pessimizes optimization opportunities
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1987
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  clang-diagnostic-implicit-function-declaration
    DiagnosticMessage:
      Message:         'call to undeclared function ''alloca''; ISO C99 and later do not support implicit function declarations'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      1998
      Replacements:    []
    Notes:
      - Message:         'expanded from macro ''ALLOCA'''
        FilePath:        '/home/kali/6614_Project/Juliet/C/testcasesupport/std_testcase.h'
        FileOffset:      1270
        Replacements:    []
    Level:           Error
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-avoid-magic-numbers
    DiagnosticMessage:
      Message:         '100 is a magic number; consider replacing it with a named constant'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      2005
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  cppcoreguidelines-avoid-magic-numbers
    DiagnosticMessage:
      Message:         '5LL is a magic number; consider replacing it with a named constant'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      2093
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
  - DiagnosticName:  altera-unroll-loops
    DiagnosticMessage:
      Message:         'kernel performance could be improved by unrolling this loop with a ''#pragma unroll'' directive'
      FilePath:        '/home/kali/6614_Project/Juliet/C/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c'
      FileOffset:      2163
      Replacements:    []
    Level:           Warning
    BuildDirectory:  '/home/kali/6614_Project/6614_Project'
...
